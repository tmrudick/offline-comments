<!doctype html>
<html>
  <head>
    <title>Fractional Calculator Checkpoint 1</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.7.0/codemirror.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.7.0/theme/eclipse.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.7.0/codemirror.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.7.0/mode/javascript/javascript.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.7.0/addon/selection/active-line.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.7.0/addon/edit/matchbrackets.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/codemirror/5.7.0/mode/clike/clike.js"></script>
    <style type="text/css">
      html,body,#container { margin: 0; padding: 0; height: 100%;}
      h1,h2 { margin: 0;}
      #header {
        font-family: Helvetica, Arial, sans-serif;
        background: #eee;
        color: #444;
        padding: 25px;
      }
      .comment { width: 100%; border: 1px solid black; padding: 2px;}
      .comment input { display: block; width: 98%;}
      .CodeMirror {border: 1px solid black; font-size:13px; height: 100%; margin: 25px;}
    </style>
  </head>
  <body>
    <div id="header">
      <h1>{{ project }}</h1>
      <h2>{{ student }}</h2>
    </div>
    <div id="container">
      <textarea id="code">
{{ code }}
      </textarea>
      <div class="comment" id="comment-template" style="display:none;">
        <input type="text" />
        <button>Remove</button>
      </div>
      <div class="comment" id="readonly-template" style="display:none;">
        <p></p>
      </div>
    </div>
    <script>
      var editor = CodeMirror.fromTextArea(document.querySelector("#code"), {
        lineNumbers: true,
        matchbrackets: true,
        theme: 'eclipse',
        readOnly: true,
        mode: 'text/x-java'
      });

      var lastLineNumber = null;
      var timeout = null;
      var autosave = null;
      var editing = {{ editing }};
      var fileId = {{ fileId }};
      var comments = JSON.parse({{{ comments }}});

      // Add comments
      for (var key in comments) {
        setComment(+key, comments[key]);
      }

      if (editing) {
        editor.on('gutterClick', function(n, ln) {
          if (lastLineNumber === ln) {
            lastLineNumber = null;
            clearTimeout(timeout);
            addComment(ln);
          } else {
            lastLineNumber = ln;
            timeout = setTimeout(function() {
              lastLineNumber = null;
            }, 500);
          }
        });
      }

      function addComment(ln) {
        var element = document.querySelector('#comment-template').cloneNode(true);
        element.id = "comment-" + ln;
        element.style.display = 'block';
        var widget = editor.addLineWidget(ln, element, {
          handleMouseEvents: false
        });
        element.querySelector('button').addEventListener('click', function() {
          editor.removeLineWidget(widget);
          delete comments[ln];
        });
        element.querySelector('input').addEventListener('keyup', function() {
          comments[ln] = this.value;
          clearTimeout(autosave);
          autosave = setTimeout(function() {
            save();
          }, 500);
        });
      }

      function setComment(ln, text) {
        var element = document.querySelector('#readonly-template').cloneNode(true);
        element.querySelector('p').innerText = text;
        element.id = "comment-" + ln;
        element.style.display = 'block';
        editor.addLineWidget(ln, element);
      }

      function save() {
        var xhr = new XMLHttpRequest();
        xhr.open('POST', '/review/' + fileId, true);
        xhr.send(JSON.stringify(comments));
      }
    </script>
  </body>
</html>